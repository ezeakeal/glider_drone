[loggers]
keys=root

[handlers]
keys=stream,file

[formatters]
keys=formatter

[logger_root]
level=WARN
handlers=stream,file

[handler_stream]
class=StreamHandler
level=DEBUG
formatter=formatter
args=(sys.stderr,)

[handler_file]
class=handlers.TimedRotatingFileHandler
interval=midnight
backupCount=5
formatter=formatter
level=DEBUG
args=('/tmp/glider.log',)

[formatter_formatter]
format=%(asctime)s %(name)-12s L.%(lineno)d %(levelname)-8s %(message)s

[redis_client]
host=127.0.0.1
port=6379
db=0

[gps]
fake_location=/tmp/location.json

[camera]
data_dir=/data/camera

[imu]
# Remove the .ini extension (https://github.com/Nick-Currawong/RTIMULib2/tree/master/Linux/python#usage)
conf_path=/home/pi/RTIMULib

[servo]
# servo hat i2c address
hat_i2c_address=0x70
# the offset for servo pulse in ms
pulse_lag_ms=100
# Servo addresses
address_wing_left=0
address_wing_right=1
address_parachute=2
address_release=3
# Servo frequency
frequency=50
# min/max pulse width for servos
min_ms=0.7
max_ms=2.4
# seconds between servo commands
controller_breather=0.01

[telemetry]
interval_data = .5
interval_telem = 5

[radio]
port = /dev/ttyAMA0
baud_rate = 38400
callsign = glider
groundstation_address = 0xFF
address = 0xAA

[flight]
# This is the desired pitch of the glider in degrees
# We want it to generally point down to keep flying
desired_pitch_deg = -15
# Turn severity defines how much the glider will roll
# proportional to the difference in desired direction
# This multiplies the apparent difference in angle, as
# tan will ramp up to +/- infinity at either +/- 90deg
# This gets limited later
turn_severity = 1.2
# The most the servos can move in degrees (either way, e.g. 20 = centre +- 20)
servo_range = 40
# Initial GPS coordinates to target
initial_destination = 54.816069,-6.052094
# How often to update the wings
wing_update_interval = 0.02
# Store the angle (degrees) which makes the wings flat
wing_flat_angle_l = 70
wing_flat_angle_r = 100
# How often to update the glider location (updates target heading)
location_refresh_interval=30

[mission]
# When to let go of the balloon
balloon_release_altitude = 22000
# When to deploy the parachute
parachute_height = -2000
# How many seconds to wait before releasing the chute
dive_time_before_chute = 5
# Contact detail to say when waiting for rescue
contact_detail = "Daniel at 0833457414"