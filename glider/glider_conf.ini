[loggers]
keys=root

[handlers]
keys=stream,file

[formatters]
keys=formatter

[logger_root]
level=WARN
handlers=stream,file

[handler_stream]
class=StreamHandler
level=DEBUG
formatter=formatter
args=(sys.stderr,)

[handler_file]
class=handlers.TimedRotatingFileHandler
interval=midnight
backupCount=5
formatter=formatter
level=WARN
args=('/tmp/glider.log',)

[formatter_formatter]
format=%(asctime)s %(name)-12s L.%(lineno)d %(levelname)-8s %(message)s

[redis_client]
host=127.0.0.1
port=6379
db=0

[gps]
fake_location=/tmp/location.json

[camera]
data_dir=/data/camera

[imu]
# Remove the .ini extension (https://github.com/Nick-Currawong/RTIMULib2/tree/master/Linux/python#usage)
conf_path=/home/pi/RTIMULib
# Max allowed difference from IMU heading and GPS heading in degrees before IMU is corrected by offset
heading_discrepancy_allowance=5.0

[servo]
# servo hat i2c address
hat_i2c_address=0x70
# the offset for servo pulse in ms
pulse_lag_ms=100
# Servo addresses
flap_address_left_far=2
flap_address_right_far=3
flap_address_left_near=0
flap_address_right_near=1
flap_address_rear=7
flap_address_rudder=8

servo_address_release=11
servo_address_parachute=12
servo_center_release=90
servo_center_parachute=90

# Servo frequency
frequency=50
# min/max pulse width for servos
min_ms=0.7
max_ms=2.4
# seconds between servo commands
controller_breather=0.02

[telemetry]
interval_data = 1
interval_telem = 5

[radio]
port = /dev/ttyAMA0
baud_rate = 38400
callsign = glider
groundstation_address = 0xFF
address = 0xAA

[flight]
# This is the desired pitch of the glider in degrees
# We want it to generally point down to keep flying
nominal_pitch_deg = -10
# Turn severity defines how much the glider will roll
# proportional to the difference in desired direction
# This multiplies the apparent difference in angle, as
# tan will ramp up to +/- infinity at either +/- 90deg
# This gets limited later
turn_severity = 1.0
# The most the servos can move in degrees (either way, e.g. 20 = centre +- 20)
servo_range = 45
# Initial GPS coordinates to target
initial_destination = 54.673146,-7.490621
# How often to update the wings
wing_update_interval = 0.02
# Store the angle (degrees) which makes the wings centered/flat
flap_center_left_near= 65
flap_center_right_near= 105
flap_center_left_far = 65
flap_center_right_far = 105
flap_center_rudder = 90
flap_center_rear = 90
# Whether to use the near/far flaps on the wings
use_near_wing_flaps = True
use_far_wing_flaps = True
# How often to update the glider location in seconds (updates the desired bearing)
location_refresh_interval=15
# Critical ground speed (m/s) - Values less or equal to this result in a -45 degree dive
# The pitch angle will decrease in severity proportional to sin(0) -> sin(pi/2). Generally 45 degrees and then chills
# Nominal ground speed is where the glider should stop pitching to gather speed
pitch_critical_ground_speed = 13
pitch_nominal_ground_speed = 30

[mission]
# When to let go of the balloon
balloon_release_altitude = 11000
wing_antifreeze_wiggle_altitude = 10000
# When to deploy the parachute
parachute_height = 2500
# How many seconds to wait before releasing the chute
dive_time_before_chute = 5
# Contact detail to say when waiting for rescue
contact_detail = "Daniel at 0833457414"

[test_chute]
chute_delay_time = 10

[test_release]
release_delay_time = 5